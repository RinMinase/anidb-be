{
    "openapi": "3.0.0",
    "info": {
        "title": "AniDB API Documentation",
        "version": "1.0"
    },
    "paths": {
        "/api/anilist/title/{title_id}": {
            "get": {
                "tags": [
                    "AniList"
                ],
                "summary": "Retrieve Title Information",
                "operationId": "ac98a39abbb393d92e41c05548534604",
                "parameters": [
                    {
                        "name": "title_id",
                        "in": "path",
                        "description": "Title ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": "101280"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/AnilistTitleResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "429": {
                        "$ref": "#/components/responses/AnilistRateLimitErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/AnilistOtherErrorResponse"
                    },
                    "503": {
                        "$ref": "#/components/responses/AnilistConnectionErrorResponse"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/anilist/search": {
            "get": {
                "tags": [
                    "AniList"
                ],
                "summary": "Query Titles",
                "operationId": "8fae86d950524ec3e429914cae74dbe5",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Title Search String",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tensei"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AnilistSearchResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "429": {
                        "$ref": "#/components/responses/AnilistRateLimitErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/AnilistOtherErrorResponse"
                    },
                    "503": {
                        "$ref": "#/components/responses/AnilistConnectionErrorResponse"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Registration",
                "operationId": "31cfdf7ad0b73495ed2b7bb54e9d8a54",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/user_register_username"
                    },
                    {
                        "$ref": "#/components/parameters/user_register_password"
                    },
                    {
                        "$ref": "#/components/parameters/user_register_password_confirmation"
                    },
                    {
                        "$ref": "#/components/parameters/user_register_root_password"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/UserToken"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Login",
                "operationId": "d7cbb3ac96888b0e21dcf8ee1845fe40",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/user_login_username"
                    },
                    {
                        "$ref": "#/components/parameters/user_login_password"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/UserToken"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthInvalidCredentialsResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Logout",
                "operationId": "7bdaf2cc85f771edf0ea8b95bb8dbac1",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "operationId": "b8424f088ab85f004529540f377aa681",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/UserDetails"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/buckets/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import a JSON file to seed data for buckets table",
                "operationId": "9a965f62b5a54805017bc2a953f1e14f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims": {
            "get": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Get All Bucket Sims",
                "operationId": "edc0b7bf5b63f4d27beef62d51ebb9e0",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BucketSimInfo"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Add a Bucket Sim",
                "operationId": "2502afb5c77b7fb43dbea30b7a2ff198",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/bucket_sim_add_edit_description"
                    },
                    {
                        "$ref": "#/components/parameters/bucket_sim_add_edit_buckets"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims/{bucket_info_id}": {
            "get": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Get Stats of Bucket Sim with Entries",
                "operationId": "1624f5c9a3f7e14b9434aac5b060a7be",
                "parameters": [
                    {
                        "name": "bucket_info_id",
                        "in": "path",
                        "description": "Bucket Info ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "from": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "a"
                                                            },
                                                            "to": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "d"
                                                            },
                                                            "free": {
                                                                "type": "string",
                                                                "example": "1.11 TB"
                                                            },
                                                            "freeTB": {
                                                                "type": "string",
                                                                "example": "1.11 TB"
                                                            },
                                                            "used": {
                                                                "type": "string",
                                                                "example": "123.12 GB"
                                                            },
                                                            "percent": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 10
                                                            },
                                                            "total": {
                                                                "type": "string",
                                                                "example": "1.23 TB"
                                                            },
                                                            "rawTotal": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "example": 1000169533440
                                                            },
                                                            "titles": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "stats": {
                                                    "$ref": "#/components/schemas/BucketSimInfo"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims/{bucket_sim_id}": {
            "put": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Edit a Bucket Sim",
                "operationId": "7a8089277d2c7a4a4de97c1a1cec4309",
                "parameters": [
                    {
                        "name": "bucket_sim_id",
                        "in": "path",
                        "description": "Bucket Sim Info ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                    },
                    {
                        "$ref": "#/components/parameters/bucket_sim_add_edit_description"
                    },
                    {
                        "$ref": "#/components/parameters/bucket_sim_add_edit_buckets"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Delete a Bucket Sim",
                "operationId": "ee76cd295522acf929a76a863c0f4403",
                "parameters": [
                    {
                        "name": "bucket_sim_id",
                        "in": "path",
                        "description": "Bucket Sim Info ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims/save/{bucket_sim_id}": {
            "post": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Save Bucket Sim as Current Bucket",
                "operationId": "64f3d7c3b497f763b622cda9cf09f1da",
                "parameters": [
                    {
                        "name": "bucket_sim_id",
                        "in": "path",
                        "description": "Bucket Sim Info ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims/clone/{bucket_sim_id}": {
            "post": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Clone Bucket Sim",
                "operationId": "8f34c26b1248a01a87d54c92f5d24cf4",
                "parameters": [
                    {
                        "name": "bucket_sim_id",
                        "in": "path",
                        "description": "Bucket Sim Info ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "newId": {
                                                            "type": "string",
                                                            "format": "uuid",
                                                            "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims/preview": {
            "post": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Preview a Bucket Sim",
                "operationId": "aea7e9c4f2bcc821c8198382865dcb18",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/bucket_sim_preview_buckets"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "from": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "a"
                                                            },
                                                            "to": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "d"
                                                            },
                                                            "free": {
                                                                "type": "string",
                                                                "example": "1.11 TB"
                                                            },
                                                            "freeTB": {
                                                                "type": "string",
                                                                "example": "1.11 TB"
                                                            },
                                                            "used": {
                                                                "type": "string",
                                                                "example": "123.12 GB"
                                                            },
                                                            "percent": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 10
                                                            },
                                                            "total": {
                                                                "type": "string",
                                                                "example": "1.23 TB"
                                                            },
                                                            "rawTotal": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "example": 1000169533440
                                                            },
                                                            "titles": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "stats": {
                                                    "$ref": "#/components/schemas/BucketSimInfo"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/bucket-sims/backup": {
            "post": {
                "tags": [
                    "Bucket Simulation"
                ],
                "summary": "Backup current buckets to sim list",
                "operationId": "76e989c4578b129acf8f336dc8f47887",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/catalogs": {
            "get": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Get All Catalogs",
                "operationId": "bf7d3c3af4d71538d00b0df849f3d908",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                            },
                                                            "year": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 2020
                                                            },
                                                            "season": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Winter",
                                                                    "Spring",
                                                                    "Summer",
                                                                    "Fall"
                                                                ],
                                                                "example": "Winter"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Add a Catalog",
                "operationId": "8d851d66dad56921006fe15cca087444",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/catalog_add_edit_season"
                    },
                    {
                        "$ref": "#/components/parameters/catalog_add_edit_year"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/catalogs/{catalog_id}/partials": {
            "get": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Get Partials in Catalog",
                "operationId": "a58d0da8833ca39372572b4328219323",
                "parameters": [
                    {
                        "name": "catalog_id",
                        "in": "path",
                        "description": "Catalog ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PartialResource"
                                                    }
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid",
                                                            "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                        },
                                                        "year": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 2020
                                                        },
                                                        "season": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Winter",
                                                                "Spring",
                                                                "Summer",
                                                                "Fall"
                                                            ],
                                                            "example": "Winter"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/catalogs/{catalog_id}": {
            "put": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Edit a Catalog",
                "operationId": "0eab08efecfd0eb04f1f6805da8af369",
                "parameters": [
                    {
                        "name": "catalog_id",
                        "in": "path",
                        "description": "Catalog ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/catalog_add_edit_season"
                    },
                    {
                        "$ref": "#/components/parameters/catalog_add_edit_year"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Delete a Catalog",
                "operationId": "cfdc75fe92bd8e71c989ed0696b8a53f",
                "parameters": [
                    {
                        "name": "catalog_id",
                        "in": "path",
                        "description": "Catalog ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/codecs": {
            "get": {
                "tags": [
                    "Codec"
                ],
                "summary": "Get All Codecs",
                "operationId": "e0c231e244a324da7fa9837fe561cc2c",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "audio": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/CodecAudio"
                                                            }
                                                        },
                                                        "video": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/CodecVideo"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/codecs/audio": {
            "get": {
                "tags": [
                    "Codec"
                ],
                "summary": "Get All Audio Codecs",
                "operationId": "0a525c027792c43d27bfb8afa6a455fd",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CodecAudio"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Codec"
                ],
                "summary": "Add an Audio Codec",
                "operationId": "abf83d64014d56f89132113c8c1c0417",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/codec_add_edit_codec"
                    },
                    {
                        "$ref": "#/components/parameters/codec_add_edit_order"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/codecs/audio/{audio_codec_id}": {
            "put": {
                "tags": [
                    "Codec"
                ],
                "summary": "Edit an Audio Codec",
                "operationId": "62b34b01fcc30f147780312aa23c4504",
                "parameters": [
                    {
                        "name": "audio_codec_id",
                        "in": "path",
                        "description": "Audio Codec ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    },
                    {
                        "$ref": "#/components/parameters/codec_add_edit_codec"
                    },
                    {
                        "$ref": "#/components/parameters/codec_add_edit_order"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Codec"
                ],
                "summary": "Delete an Audio Codec",
                "operationId": "2bdf95a30a93dcf0e0e7eea8b6cef18f",
                "parameters": [
                    {
                        "name": "audio_codec_id",
                        "in": "path",
                        "description": "Audio Codec ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/codecs/video": {
            "get": {
                "tags": [
                    "Codec"
                ],
                "summary": "Get All Video Codecs",
                "operationId": "4dd26c319592446b65eba6cc3d097957",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CodecVideo"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Codec"
                ],
                "summary": "Add a Video Codec",
                "operationId": "8c456ec5babdf24cee4a7128fe096ab8",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/codec_add_edit_codec"
                    },
                    {
                        "$ref": "#/components/parameters/codec_add_edit_order"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/codecs/video/{video_codec_id}": {
            "put": {
                "tags": [
                    "Codec"
                ],
                "summary": "Edit a Video Codec",
                "operationId": "197b7187f4970d40e0f70ef9416087f6",
                "parameters": [
                    {
                        "name": "video_codec_id",
                        "in": "path",
                        "description": "Video Codec ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    },
                    {
                        "$ref": "#/components/parameters/codec_add_edit_codec"
                    },
                    {
                        "$ref": "#/components/parameters/codec_add_edit_order"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Codec"
                ],
                "summary": "Delete an Video Codec",
                "operationId": "a1c38d740d3722e13edc21d1d4c802d3",
                "parameters": [
                    {
                        "name": "video_codec_id",
                        "in": "path",
                        "description": "Video Codec ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/dropdowns": {
            "get": {
                "tags": [
                    "Dropdowns"
                ],
                "summary": "Get All Dropdowns for Adding Entries",
                "operationId": "acf1207e20cbede59a6901600539db51",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "groups": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "qualities": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Quality"
                                                            }
                                                        },
                                                        "codecs": {
                                                            "properties": {
                                                                "audio": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/CodecAudio"
                                                                    }
                                                                },
                                                                "video": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/CodecVideo"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "genres": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Genre"
                                                            }
                                                        },
                                                        "watchers": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "example": 1
                                                                    },
                                                                    "label": {
                                                                        "type": "string",
                                                                        "example": "label"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-bucket": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All Bucket Stats with Entries",
                "operationId": "29d94894dc0919924c95e0aee2b6078d",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "from": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "a"
                                                            },
                                                            "to": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "d"
                                                            },
                                                            "free": {
                                                                "type": "string",
                                                                "example": "1.11 TB"
                                                            },
                                                            "freeTB": {
                                                                "type": "string",
                                                                "example": "1.11 TB"
                                                            },
                                                            "used": {
                                                                "type": "string",
                                                                "example": "123.12 GB"
                                                            },
                                                            "percent": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 10
                                                            },
                                                            "total": {
                                                                "type": "string",
                                                                "example": "1.23 TB"
                                                            },
                                                            "rawTotal": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "example": 1000169533440
                                                            },
                                                            "titles": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-bucket/{bucket_id}": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All Entries by Bucket",
                "operationId": "8e8b9edf1f4c6cfd779547c6171f46bd",
                "parameters": [
                    {
                        "name": "bucket_id",
                        "in": "path",
                        "description": "Bucket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EntrySummaryResource"
                                                    }
                                                },
                                                "stats": {
                                                    "$ref": "#/components/schemas/Bucket"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-genre": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All By Genre Stats with Entries",
                "operationId": "6eb0e4d0c3a4f5148952e6ff1b8908f9",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "genre": {
                                                                "type": "string",
                                                                "example": "Comedy"
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 12
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-genre/{genre}": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All Entries by Genre",
                "operationId": "d91f768ae8e077cd26caee959485cc32",
                "parameters": [
                    {
                        "name": "genre",
                        "in": "path",
                        "description": "Genre",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "comedy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EntrySummaryResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-name": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All By Name Stats with Entries",
                "operationId": "8f046116e5766b4bd83b6a4d0e61b8b5",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "letter": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "minLength": 1,
                                                                "example": "A"
                                                            },
                                                            "titles": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 12
                                                            },
                                                            "filesize": {
                                                                "type": "string",
                                                                "example": "12.23 GB"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-name/{letter}": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All Entries by Name",
                "operationId": "de18c30e0c4fc7089839af4eb540c693",
                "parameters": [
                    {
                        "name": "letter",
                        "in": "path",
                        "description": "A-Z / a-z for alphabet titles or 0 (number) for numeric titles",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 1,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0]$"
                        },
                        "example": "A"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EntrySummaryResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-sequence/{sequence_id}": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All Sequence Stats with Entries",
                "operationId": "8d556f1312cc8d71d52ba56f1666e769",
                "parameters": [
                    {
                        "name": "sequence_id",
                        "in": "path",
                        "description": "Sequence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EntryBySequenceResource"
                                                    }
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "titlesPerDay": {
                                                            "type": "number",
                                                            "example": 1.23
                                                        },
                                                        "epsPerDay": {
                                                            "type": "number",
                                                            "example": 2.34
                                                        },
                                                        "quality2160": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 1
                                                        },
                                                        "quality1080": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 2
                                                        },
                                                        "quality720": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 3
                                                        },
                                                        "quality480": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 4
                                                        },
                                                        "quality360": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 5
                                                        },
                                                        "totalTitles": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 12
                                                        },
                                                        "totalEps": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 123
                                                        },
                                                        "totalSize": {
                                                            "type": "string",
                                                            "example": "12.34 GB"
                                                        },
                                                        "totalDays": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 123
                                                        },
                                                        "startDate": {
                                                            "type": "string",
                                                            "example": "Jan 01, 2000"
                                                        },
                                                        "endDate": {
                                                            "type": "string",
                                                            "example": "Feb 01, 2000"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-year": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All By Year Stats with Entries",
                "operationId": "20351d9ca7a3566467cd77394c527536",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "year": {
                                                                "description": "null value on uncategorized entries",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": "2020",
                                                                "nullable": true
                                                            },
                                                            "count": {
                                                                "description": "null value whenever seasons is present; total count of 'null' year",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "seasons": {
                                                                "description": "null value on uncategorized entries",
                                                                "properties": {
                                                                    "Winter": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "example": 1
                                                                    },
                                                                    "Spring": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "example": 2
                                                                    },
                                                                    "Summer": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "example": 3
                                                                    },
                                                                    "Fall": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "example": 4
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/by-year/{year}": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get All By Year Stats with Entries",
                "operationId": "7c42b40d7225902c1ddf34f301639c06",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year should be between 1900-2999, pass 'uncategorized' if fetching for uncategorized",
                        "schema": {
                            "$ref": "#/components/schemas/YearSchema"
                        },
                        "example": 2000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "Winter": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/EntrySummaryResource"
                                                            }
                                                        },
                                                        "Spring": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/EntrySummaryResource"
                                                            }
                                                        },
                                                        "Summer": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/EntrySummaryResource"
                                                            }
                                                        },
                                                        "Fall": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/EntrySummaryResource"
                                                            }
                                                        },
                                                        "Uncategorized": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/EntrySummaryResource"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Get All Entries",
                "operationId": "0715d85a4978cb676a1adae8ea40927c",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/entry_get_all_query"
                    },
                    {
                        "$ref": "#/components/parameters/entry_get_all_column"
                    },
                    {
                        "$ref": "#/components/parameters/entry_get_all_order"
                    },
                    {
                        "$ref": "#/components/parameters/entry_get_all_page"
                    },
                    {
                        "$ref": "#/components/parameters/entry_get_all_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Pagination"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EntrySummaryResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Entry"
                ],
                "summary": "Add an Entry",
                "operationId": "d47d75be256bcd56c54bd706cad34538",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_quality"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_title"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_date_finished"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_duration"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_filesize"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_episodes"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_ovas"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_specials"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_season_number"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_season_first_title_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_prequel_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_sequel_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_video"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_subs"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_subs"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_release_year"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_release_season"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_variants"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_remarks"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_codec_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_codec_video"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_codec_hdr"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_genres"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_watcher"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/{entry_id}": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Get an Entry",
                "operationId": "5df08dbe6c90dd06c1ab84ff0d0de6f7",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/EntryResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Entry"
                ],
                "summary": "Edit an Entry",
                "operationId": "5dcf0ff1ac723cf8d626f10c25d76680",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_quality"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_title"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_date_finished"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_duration"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_filesize"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_episodes"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_ovas"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_specials"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_season_number"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_season_first_title_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_prequel_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_sequel_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_video"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_subs"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_encoder_subs"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_release_year"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_release_season"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_variants"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_remarks"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_codec_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_codec_video"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_codec_hdr"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_genres"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_edit_id_watcher"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Entry"
                ],
                "summary": "Delete an Entry",
                "operationId": "6cad2cf23ed1d8387c847ab4cfc624e2",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/search": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Search All Entries",
                "operationId": "63761719a8d753eef3ae795a29b43aeb",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/entry_search_quality"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_title"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_date"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_filesize"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_episodes"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_ovas"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_specials"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_encoder"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_encoder_video"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_encoder_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_encoder_subs"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_release"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_rating"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_remarks"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_has_remarks"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_has_image"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_is_hdr"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_codec_video"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_codec_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_genres"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_watcher"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_column"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EntrySummaryResource"
                                                    }
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "totalFiltered": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "example": 1
                                                        },
                                                        "totalEntries": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "example": 42
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import a JSON file to seed data for entries table",
                "operationId": "e785b0fe96f59915e0a14d08a85e7e57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/{entry_id}/offquel/{entry_offquel_id}": {
            "post": {
                "tags": [
                    "Entry"
                ],
                "summary": "Add Entry Offquel",
                "operationId": "a468b8ac8eb249ba011331458777358c",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "name": "entry_offquel_id",
                        "in": "path",
                        "description": "Entry Offquel ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/EntryParsingResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Entry"
                ],
                "summary": "Delete Entry Offquel",
                "operationId": "ae9ddea40f34c44f03a0f86c44ed0afc",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "name": "entry_offquel_id",
                        "in": "path",
                        "description": "Entry Offquel ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/EntryParsingResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/img-upload/{entry_id}": {
            "post": {
                "tags": [
                    "Entry"
                ],
                "summary": "Upload an Image to Entry",
                "description": "POST request with '_method' in parameters, because PHP can't populate files in PUT/PATCH requests :: Ref. https://stackoverflow.com/a/65009135",
                "operationId": "9077ab76c57646b63c4d9b6d4f4950a5",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Entry"
                ],
                "summary": "Delete an Image of an Entry",
                "operationId": "ddbf6fd29f20629288837aed75219c3d",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/ratings/{entry_id}": {
            "put": {
                "tags": [
                    "Entry"
                ],
                "summary": "Edit Entry Ratings",
                "operationId": "286c4d5a496f73fa9817bbb97ead8a19",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/entry_ratings_audio"
                    },
                    {
                        "$ref": "#/components/parameters/entry_ratings_enjoyment"
                    },
                    {
                        "$ref": "#/components/parameters/entry_ratings_graphics"
                    },
                    {
                        "$ref": "#/components/parameters/entry_ratings_plot"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/rewatch/{entry_id}": {
            "post": {
                "tags": [
                    "Entry"
                ],
                "summary": "Add an Entry Rewatch",
                "operationId": "c4b1798ec2ae547d5b6570aedc2cde36",
                "parameters": [
                    {
                        "name": "entry_id",
                        "in": "path",
                        "description": "Entry ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/entry_add_rewatch_date_rewatched"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/rewatch/{entry_rewatch_id}": {
            "delete": {
                "tags": [
                    "Entry"
                ],
                "summary": "Delete an Entry Rewatch",
                "operationId": "9f866752b70b1d54db52f6f95a3d0097",
                "parameters": [
                    {
                        "name": "entry_rewatch_id",
                        "in": "path",
                        "description": "Entry Rewatch ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/titles": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Search Entry titles - For First Season Title, Prequel and Sequel",
                "operationId": "3f43b8fa0b3da95705bcd9ffce241635",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/entry_search_titles_id"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_titles_id_excluded"
                    },
                    {
                        "$ref": "#/components/parameters/entry_search_titles_needle"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "title 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/watchers": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Get list of Entry Watchers",
                "operationId": "8fb676f68d24b9ed76acc3775cc56143",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "label"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/entries/last": {
            "get": {
                "tags": [
                    "Entry Specific"
                ],
                "summary": "Get Latest Entries",
                "operationId": "88b2d137e04516a70107ca8d65a51395",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/entry_last_items"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/EntrySummaryResource"
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "dateLastEntry": {
                                                            "type": "string",
                                                            "example": "Apr 01, 2015"
                                                        },
                                                        "daysLastEntry": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 2974
                                                        },
                                                        "dateOldestEntry": {
                                                            "type": "string",
                                                            "example": "Jan 01, 2011"
                                                        },
                                                        "daysOldestEntry": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 4525
                                                        },
                                                        "totalEps": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "totalTitles": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 7
                                                        },
                                                        "totalCours": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "titlesPerWeek": {
                                                            "type": "number",
                                                            "example": 0.01
                                                        },
                                                        "coursPerWeek": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "epsPerWeek": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "epsPerDay": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "hoursWatchedAvgPerWeek": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "hoursWatchedLastWeek": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "hoursWatchedLastTwoWeeks": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/genres": {
            "get": {
                "tags": [
                    "Dropdowns"
                ],
                "summary": "Get All Genres",
                "operationId": "1a7e6175a7291425bb512144658d3ea3",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Genre"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get All Groups",
                "operationId": "74f97965cba29ff042644d03ab580adc",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Group"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Add a Group",
                "operationId": "d5e58c0df5e02a3de23c70700551aa64",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/group_add_edit_name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/groups/names": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get All Group Names",
                "operationId": "53fbdf770508b509a82ce8241e563ba9",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/groups/{group_id}": {
            "put": {
                "tags": [
                    "Group"
                ],
                "summary": "Edit a Group",
                "operationId": "c6d4c44e7f3880c4e941de9d7f9ec40c",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/group_add_edit_name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "summary": "Delete a Group",
                "operationId": "89ce3046c99740e998e236b35854b8da",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/groups/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import a JSON file to seed data for groups table",
                "operationId": "1c902ab05f2343a325fd5bfdda105c88",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import a JSON file to seed data for all tables",
                "operationId": "1b207f753c71f9141c62e2468fb0c199",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "entries": {
                                                            "$ref": "#/components/schemas/ImportDataCount"
                                                        },
                                                        "buckets": {
                                                            "$ref": "#/components/schemas/ImportDataCount"
                                                        },
                                                        "sequences": {
                                                            "$ref": "#/components/schemas/ImportDataCount"
                                                        },
                                                        "groups": {
                                                            "$ref": "#/components/schemas/ImportDataCount"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get All Logs",
                "operationId": "6897ba59c8c4db4a9466e5df41a9c4e0",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/log_search_column"
                    },
                    {
                        "$ref": "#/components/parameters/log_search_order"
                    },
                    {
                        "$ref": "#/components/parameters/log_search_page"
                    },
                    {
                        "$ref": "#/components/parameters/log_search_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Pagination"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "9ef81943-78f0-4d1c-a831-a59fb5af339c"
                                                            },
                                                            "tableChanged": {
                                                                "type": "string",
                                                                "example": "marathon"
                                                            },
                                                            "idChanged": {
                                                                "type": "string",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "title changed from 'old' to 'new'"
                                                            },
                                                            "action": {
                                                                "type": "string",
                                                                "example": "add"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2020-01-01 00:00:00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/management": {
            "get": {
                "tags": [
                    "Management"
                ],
                "summary": "Get Management Information",
                "operationId": "bc177e55b9e60020c922d4b6a8baf60f",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/ManagementSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/management/by-year": {
            "get": {
                "tags": [
                    "Management"
                ],
                "summary": "Get Titles Watched per Month of Year",
                "operationId": "204d073a3c8f92e409a5051ee6cacc95",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/management_get_by_year_year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/ManagementSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/components": {
            "get": {
                "tags": [
                    "PC"
                ],
                "summary": "Get All PC Components",
                "operationId": "881f1c5779b6039b697a518a5cf17215",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pc_search_component_id_type"
                    },
                    {
                        "$ref": "#/components/parameters/pc_search_component_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PCComponentResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Add a PC Component",
                "operationId": "5f37fb756f944006677e72d7919d9abc",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_id_type"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_name"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_description"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_price"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_purchase_date"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_purchase_location"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_purchase_notes"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_is_onhand"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/components/{component_id}": {
            "get": {
                "tags": [
                    "PC"
                ],
                "summary": "Get All PC Components",
                "operationId": "dcb986c70a2f15bc67ee9ce6106e64db",
                "parameters": [
                    {
                        "name": "component_id",
                        "in": "path",
                        "description": "Component ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/PCComponentResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PC"
                ],
                "summary": "Edit a PC Component",
                "operationId": "508b8544181888d527b4bb82eb100ad1",
                "parameters": [
                    {
                        "name": "component_id",
                        "in": "path",
                        "description": "Component ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_id_type"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_name"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_description"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_price"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_purchase_date"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_purchase_location"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_purchase_notes"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_is_onhand"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PC"
                ],
                "summary": "Delete a PC Component",
                "operationId": "2e06d30f542c51d4ff86ffae4b33058b",
                "parameters": [
                    {
                        "name": "component_id",
                        "in": "path",
                        "description": "Component ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/components/import": {
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Import a JSON file to add (does not delete existing) data for PC components table",
                "operationId": "1cd19ea5a54e27976fd2c91113321cd6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/types": {
            "get": {
                "tags": [
                    "PC"
                ],
                "summary": "Get All PC Component Types",
                "operationId": "3b3d765a183473602665207e67f83094",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PCComponentType"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Add a PC Component Type",
                "operationId": "1f684207688f4de4065355798f1d4122",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_type_type"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_type_name"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_type_is_peripheral"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/types/{type_id}": {
            "put": {
                "tags": [
                    "PC"
                ],
                "summary": "Edit a PC Component Type",
                "operationId": "681505f4bbb2066946fc1ec63659b19a",
                "parameters": [
                    {
                        "name": "type_id",
                        "in": "path",
                        "description": "Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_type_type"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_type_name"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_component_type_is_peripheral"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PC"
                ],
                "summary": "Delete a PC Component Type",
                "operationId": "535719d4e985e19f8f67111e222896a0",
                "parameters": [
                    {
                        "name": "type_id",
                        "in": "path",
                        "description": "Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import a JSON file to add (does not delete existing) data for all PC-related tables",
                "operationId": "bc43cb8800ff55e27fed6aeadf7e1c06",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "owners": {
                                                            "$ref": "#/components/schemas/DefaultImportSchema"
                                                        },
                                                        "components": {
                                                            "$ref": "#/components/schemas/DefaultImportSchema"
                                                        },
                                                        "infos": {
                                                            "$ref": "#/components/schemas/DefaultImportSchema"
                                                        },
                                                        "setups": {
                                                            "$ref": "#/components/schemas/DefaultImportSchema"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/infos/{info_uuid}": {
            "get": {
                "tags": [
                    "PC"
                ],
                "summary": "Get a PC Info",
                "operationId": "ac8b85d1315bc34f0057ea52dc87efba",
                "parameters": [
                    {
                        "name": "info_uuid",
                        "in": "path",
                        "description": "PC Info UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/PCInfoResource"
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "totalSetupCost": {
                                                            "type": "integer",
                                                            "example": 10000
                                                        },
                                                        "totalSetupCostFormat": {
                                                            "type": "string",
                                                            "example": "10,000"
                                                        },
                                                        "totalSystemCost": {
                                                            "type": "integer",
                                                            "example": 10000
                                                        },
                                                        "totalSystemCostFormat": {
                                                            "type": "string",
                                                            "example": "10,000"
                                                        },
                                                        "totalPeripheralCost": {
                                                            "type": "integer",
                                                            "example": 10000
                                                        },
                                                        "totalPeripheralCostFormat": {
                                                            "type": "string",
                                                            "example": "10,000"
                                                        },
                                                        "highlightCpu": {
                                                            "type": "string",
                                                            "example": "Sample CPU Name"
                                                        },
                                                        "highlightGpu": {
                                                            "type": "string",
                                                            "example": "Sample GPU Name"
                                                        },
                                                        "highlightRam": {
                                                            "type": "string",
                                                            "example": "Sample RAM Details"
                                                        },
                                                        "highlightStorage": {
                                                            "type": "string",
                                                            "example": "Sample Storage Details"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PC"
                ],
                "summary": "Edit a PC Info",
                "operationId": "bb3c85a1b935ba6ee9ed0ee8d20a1e67",
                "parameters": [
                    {
                        "name": "info_uuid",
                        "in": "path",
                        "description": "PC Info UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_id_owner"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_label"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_is_active"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_is_hidden"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_components"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PC"
                ],
                "summary": "Delete a PC Info",
                "operationId": "18548a5bf3881717af5b9f4fbe6d5d84",
                "parameters": [
                    {
                        "name": "info_uuid",
                        "in": "path",
                        "description": "PC Info UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/infos": {
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Add a PC Info",
                "operationId": "db72030ebfa2883688026ff6dd8a92c4",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_id_owner"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_label"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_is_active"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_is_hidden"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_info_components"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/infos/import": {
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Import a JSON file to add (does not delete existing) data for PC infos table",
                "operationId": "867f8fbb0165e8d8ef299146bad02e4a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/infos/{info_uuid}/duplicate": {
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Duplicate a PC Info",
                "operationId": "52d2e4351e9914af2215f5c32faee228",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/infos/{info_uuid}/hide": {
            "put": {
                "tags": [
                    "PC"
                ],
                "summary": "Set a PC Info to either shown or hidden",
                "operationId": "f9a80b7310d22adc4cd171fe3b5d5292",
                "parameters": [
                    {
                        "name": "info_uuid",
                        "in": "path",
                        "description": "PC Info UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/owners": {
            "get": {
                "tags": [
                    "PC"
                ],
                "summary": "Get All PC Owners",
                "operationId": "cf6a52d54b36401863bda9182f9ae38e",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "infos": {
                                                                "type": "array",
                                                                "items": {
                                                                    "$ref": "#/components/schemas/PCInfoSummaryResource"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Add a PC Owner",
                "operationId": "693d52764e879e4014ca9461fcc67075",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pc_add_edit_owner_name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/owners/{owner_uuid}": {
            "get": {
                "tags": [
                    "PC"
                ],
                "summary": "Get PC Owner",
                "operationId": "0e20db2d5935b00822da917aad83416f",
                "parameters": [
                    {
                        "name": "owner_uuid",
                        "in": "path",
                        "description": "Owner UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/PCOwner"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PC"
                ],
                "summary": "Edit a PC Owner",
                "operationId": "ce6a3a7a6d63f579a39b3fa269d31217",
                "parameters": [
                    {
                        "name": "owner_uuid",
                        "in": "path",
                        "description": "Owner UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/pc_add_edit_owner_name"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PC"
                ],
                "summary": "Delete a PC Owner",
                "operationId": "e59e035287f351df558f6298265746c0",
                "parameters": [
                    {
                        "name": "owner_uuid",
                        "in": "path",
                        "description": "Owner UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/owners/import": {
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Import a JSON file to add (does not delete existing) data for PC owners table",
                "operationId": "987b94f735633dde407d1a0b5930deb4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/pc/setups/import": {
            "post": {
                "tags": [
                    "PC"
                ],
                "summary": "Import a JSON file to add (does not delete existing) data for PC setups table",
                "operationId": "9439e7633db1e71e7e0a10c8b15bdf70",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/partials": {
            "get": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Get All Partials in All Catalogs",
                "operationId": "eea051e55e99504a9781c82557978db8",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/partial_get_all_query"
                    },
                    {
                        "$ref": "#/components/parameters/partial_get_all_column"
                    },
                    {
                        "$ref": "#/components/parameters/partial_get_all_order"
                    },
                    {
                        "$ref": "#/components/parameters/partial_get_all_page"
                    },
                    {
                        "$ref": "#/components/parameters/partial_get_all_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PartialWithCatalogResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Add a Partial Entry",
                "operationId": "e600f83f93bd02554d7ece261d8d9a54",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/partial_add_edit_id_catalog"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_id_priority"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_title"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/partials/{partial_id}": {
            "get": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Get Partial Entry",
                "operationId": "377a7bab75a0d90c8fde22b76438f1a0",
                "parameters": [
                    {
                        "name": "partial_id",
                        "in": "path",
                        "description": "Partial ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PartialResource"
                                                        },
                                                        {
                                                            "properties": {
                                                                "idPriority": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "example": 1
                                                                },
                                                                "idCatalog": {
                                                                    "type": "string",
                                                                    "format": "uuid",
                                                                    "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Edit a Partial Entry",
                "operationId": "8e4850308b9796fc159f781c36dff0b7",
                "parameters": [
                    {
                        "name": "partial_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_id_catalog"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_id_priority"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_title"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Delete a Partial Entry",
                "operationId": "bd9213fd4b866e6458f188b34ee1904d",
                "parameters": [
                    {
                        "name": "partial_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/partials/multi": {
            "post": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Multi Add a Partial Entry",
                "operationId": "d067f9d3090ebcf7d761fcae4cea9c25",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/partial_add_edit_multiple_data"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_multiple_season"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_multiple_year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "accepted": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/PartialParsingResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/partials/multi/{catalog_id}": {
            "put": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Multi Edit a Partial Entry",
                "operationId": "dca1b91b96fbc5a07172cc580a3acc81",
                "parameters": [
                    {
                        "name": "catalog_id",
                        "in": "path",
                        "description": "Catalog ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_multiple_data"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_multiple_season"
                    },
                    {
                        "$ref": "#/components/parameters/partial_add_edit_multiple_year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "accepted": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/PartialParsingResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/priorities": {
            "get": {
                "tags": [
                    "Dropdowns"
                ],
                "summary": "Get All Priorities",
                "operationId": "4ab155e8676f5515a4048f4653a12c74",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Priority"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/qualities": {
            "get": {
                "tags": [
                    "Dropdowns"
                ],
                "summary": "Get All Qualities",
                "operationId": "3d28e8a72e59e561df48780d83c44b6d",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Quality"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/sequences": {
            "get": {
                "tags": [
                    "Sequence"
                ],
                "summary": "Get All Sequences",
                "operationId": "175ffa645f1dc70cff7f0776d7d48feb",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Sequence"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sequence"
                ],
                "summary": "Add a Sequence",
                "operationId": "059667e465008cdbc254b5ba6c6758ce",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/sequence_add_edit_title"
                    },
                    {
                        "$ref": "#/components/parameters/sequence_add_edit_date_from"
                    },
                    {
                        "$ref": "#/components/parameters/sequence_add_edit_date_to"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/sequences/{sequence_id}": {
            "get": {
                "tags": [
                    "Sequence"
                ],
                "summary": "Get Sequence",
                "operationId": "426cad1ceef354765e38378abedca188",
                "parameters": [
                    {
                        "name": "sequence_id",
                        "in": "path",
                        "description": "Sequence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Sequence"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sequence"
                ],
                "summary": "Edit a Sequence",
                "operationId": "9d0fdc4523d208d64ebde04a182ebf52",
                "parameters": [
                    {
                        "name": "sequence_id",
                        "in": "path",
                        "description": "Sequence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "$ref": "#/components/parameters/sequence_add_edit_title"
                    },
                    {
                        "$ref": "#/components/parameters/sequence_add_edit_date_from"
                    },
                    {
                        "$ref": "#/components/parameters/sequence_add_edit_date_to"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sequence"
                ],
                "summary": "Delete a Sequence",
                "operationId": "cc91fd203e8f989b84aaa887e4aacf91",
                "parameters": [
                    {
                        "name": "sequence_id",
                        "in": "path",
                        "description": "Sequence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/sequences/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import a JSON file to seed data for sequences table",
                "operationId": "6294a111c8eeb0bce46f45ef2698d9ba",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/DefaultImportSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all non-admin users",
                "operationId": "51392a3867f8e0ef2c4f0292de045389",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserDetails"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a non-admin user",
                "operationId": "8f9ce76211b2c842c935680e31077ced",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/user_add_edit_username"
                    },
                    {
                        "$ref": "#/components/parameters/user_add_edit_password"
                    },
                    {
                        "$ref": "#/components/parameters/user_add_edit_password_confirmation"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/users/{user_uuid}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a non-admin user",
                "operationId": "90995aa531818103fe1711c7761be538",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/UserDetails"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Edit a non-admin user",
                "operationId": "28247db7fefe706ccfb9fefca09e72fd",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/user_add_edit_username"
                    },
                    {
                        "$ref": "#/components/parameters/user_add_edit_password"
                    },
                    {
                        "$ref": "#/components/parameters/user_add_edit_password_confirmation"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a non-admin user",
                "operationId": "fe278d5c564ca36546d21eb666362a7b",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/fourleaf/bills/electricity": {
            "get": {
                "tags": [
                    "Fourleaf - Bills"
                ],
                "summary": "Fourleaf API - Get Electricity Bills by Year",
                "operationId": "75d49251a1fc38fff0218c8c211a4ca2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_get_year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BillsElectricity"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            },
            "post": {
                "tags": [
                    "Fourleaf - Bills"
                ],
                "summary": "Fourleaf API - Add an Electricity Bill data point",
                "operationId": "85f6113def2dcb0857a2b86eb7fe25cb",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_add_edit_date"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_add_edit_kwh"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_add_edit_cost"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/bills/electricity/{electricity_bill_uuid}": {
            "put": {
                "tags": [
                    "Fourleaf - Bills"
                ],
                "summary": "Fourleaf API - Edit an Electricity Bill data point",
                "operationId": "51acc789cd1dd3e29af415887dabf255",
                "parameters": [
                    {
                        "name": "electricity_bill_uuid",
                        "in": "path",
                        "description": "Electricity Bill ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_add_edit_date"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_add_edit_kwh"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_bills_electricity_add_edit_cost"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fourleaf - Bills"
                ],
                "summary": "Fourleaf API - Delete an Electricity Bill data point",
                "operationId": "9ff3c2f92579b5a62be8929e93ef36dc",
                "parameters": [
                    {
                        "name": "electricity_bill_uuid",
                        "in": "path",
                        "description": "Electricity Bill ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/electricity": {
            "get": {
                "tags": [
                    "Fourleaf - Electricity"
                ],
                "summary": "Fourleaf API - Get Electricity Overview",
                "operationId": "59eb029d753bcebf8375e8076173237e",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_electricity_get_year"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_electricity_get_month"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "settings": {
                                                            "properties": {
                                                                "kwhValue": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 12.23
                                                                },
                                                                "monthStartsAt": {
                                                                    "type": "string",
                                                                    "example": "monday"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weekly": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                                    },
                                                                    "weekNo": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "actualWeekYearNo": {
                                                                        "type": "integer",
                                                                        "example": 12
                                                                    },
                                                                    "totalKwh": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "totalKwhValue": {
                                                                        "type": "integer",
                                                                        "example": 123
                                                                    },
                                                                    "daysWithRecord": {
                                                                        "type": "integer",
                                                                        "example": 123
                                                                    },
                                                                    "daysWithNoRecord": {
                                                                        "type": "integer",
                                                                        "example": 123
                                                                    },
                                                                    "daysInWeek": {
                                                                        "type": "integer",
                                                                        "example": 123
                                                                    },
                                                                    "totalRecordedKwh": {
                                                                        "type": "integer",
                                                                        "example": 123
                                                                    },
                                                                    "totalEstimatedKwh": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "estTotalKwh": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "estTotalPrice": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "avgDailyKwh": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "daily": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "format": "uuid",
                                                                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                                                                    },
                                                                    "dateNumber": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "day": {
                                                                        "type": "string",
                                                                        "example": "monday"
                                                                    },
                                                                    "date": {
                                                                        "type": "string",
                                                                        "example": "2023-05-21"
                                                                    },
                                                                    "kwPerHour": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "kwPerDay": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "pricePerDay": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    },
                                                                    "readingValue": {
                                                                        "type": "integer",
                                                                        "example": 123
                                                                    },
                                                                    "readingTime": {
                                                                        "type": "string",
                                                                        "example": "13:00"
                                                                    },
                                                                    "state": {
                                                                        "type": "string",
                                                                        "example": "low|normal|high"
                                                                    },
                                                                    "allDaysAvg": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 12.34
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            },
            "post": {
                "tags": [
                    "Fourleaf - Electricity"
                ],
                "summary": "Fourleaf API - Add an Electricity data point",
                "operationId": "107e4b2212ce761762b14106a8c42f54",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_electricity_add_edit_datetime"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_electricity_add_edit_reading"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/electricity/{electricity_id}": {
            "put": {
                "tags": [
                    "Fourleaf - Electricity"
                ],
                "summary": "Fourleaf API - Edit an Electricity data point",
                "operationId": "0aaea2a30e895d83780cab76e54af5ca",
                "parameters": [
                    {
                        "name": "electricity_id",
                        "in": "path",
                        "description": "Electricity ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_electricity_add_edit_datetime"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_electricity_add_edit_reading"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fourleaf - Electricity"
                ],
                "summary": "Fourleaf API - Delete an Electricity data point",
                "operationId": "4f3ac697b142a745a2ee56985070d963",
                "parameters": [
                    {
                        "name": "electricity_id",
                        "in": "path",
                        "description": "Electricity ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/gas": {
            "get": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Get Gas Overview",
                "operationId": "d679f648d13aefed74254182e134b2d0",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_gas_avg_efficiency_type"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_gas_efficiency_graph_type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "stats": {
                                                            "properties": {
                                                                "averageEfficiency": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "minimum": 0,
                                                                    "example": 12.23
                                                                },
                                                                "lastEfficiency": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "minimum": 0,
                                                                    "example": 12.23
                                                                },
                                                                "mileage": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "minimum": 0,
                                                                    "example": 1000
                                                                },
                                                                "age": {
                                                                    "type": "string",
                                                                    "example": "1 year, 2 months"
                                                                },
                                                                "kmPerMonth": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "minimum": 0,
                                                                    "example": 12.23
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "graph": {
                                                            "properties": {
                                                                "efficiency": {
                                                                    "properties": {
                                                                        "<date>": {
                                                                            "type": "string",
                                                                            "example": "<value>"
                                                                        },
                                                                        "2020-10-20": {
                                                                            "type": "number",
                                                                            "format": "float",
                                                                            "example": 12.23
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "gas": {
                                                                    "properties": {
                                                                        "<date>": {
                                                                            "type": "string",
                                                                            "example": "<value>"
                                                                        },
                                                                        "2020-10-20": {
                                                                            "type": "number",
                                                                            "format": "float",
                                                                            "example": 12.23
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maintenance": {
                                                            "properties": {
                                                                "km": {
                                                                    "properties": {
                                                                        "engineOil": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "tires": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "transmissionFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "brakeFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "radiatorFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "sparkPlugs": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "powerSteeringFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "year": {
                                                                    "properties": {
                                                                        "engineOil": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "transmissionFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "brakeFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "battery": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "radiatorFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "acCoolant": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "powerSteeringFluid": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        },
                                                                        "tires": {
                                                                            "type": "string",
                                                                            "example": "normal"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "lastMaintenance": {
                                                            "properties": {
                                                                "km": {
                                                                    "properties": {
                                                                        "engineOil": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        },
                                                                        "tires": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        },
                                                                        "transmissionFluid": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        },
                                                                        "brakeFluid": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        },
                                                                        "radiatorFluid": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        },
                                                                        "sparkPlugs": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        },
                                                                        "powerSteeringFluid": {
                                                                            "type": "string",
                                                                            "example": "2024-01-01"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "year": {
                                                                    "properties": {
                                                                        "acCoolant": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "battery": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "brakeFluid": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "engineOil": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "powerSteeringFluid": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "radiatorFluid": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "sparkPlugs": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "tires": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "transmissionFluid": {
                                                                            "properties": {
                                                                                "date": {
                                                                                    "type": "string",
                                                                                    "example": "2024-01-01"
                                                                                },
                                                                                "odometer": {
                                                                                    "type": "number",
                                                                                    "maximum": 100000,
                                                                                    "minimum": 0,
                                                                                    "example": 2000
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/gas/odo": {
            "get": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Get Odometer by Year",
                "operationId": "25279572a67e99915b2cca5d6ea21ed7",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_odo_year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "schema": "integer"
                                                    },
                                                    "example": [
                                                        123,
                                                        234
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/FourleafGasInvalidYearResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/gas/fuel": {
            "get": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Get Fuel List",
                "operationId": "8394dd9d4b13fb27220ccd44def301b1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_fuel_column"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_fuel_order"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_fuel_page"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_get_fuel_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Pagination"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Gas"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            },
            "post": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Add a Fuel data",
                "operationId": "e25d12c1276da6fc5c57101568728425",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_date"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_from_bars"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_to_bars"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_odometer"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_price_per_liter"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_liters_filled"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/gas/fuel/{gas_id}": {
            "put": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Edit a Fuel data",
                "operationId": "0b36eaf9f498957199fb70d625e42dc3",
                "parameters": [
                    {
                        "name": "gas_id",
                        "in": "path",
                        "description": "Gas ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_date"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_from_bars"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_to_bars"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_odometer"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_price_per_liter"
                    },
                    {
                        "$ref": "#/components/parameters/fourleaf_gas_add_edit_fuel_liters_filled"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Delete a Fuel data",
                "operationId": "bcac675bc404d5af0b0ba7f2d80a9640",
                "parameters": [
                    {
                        "name": "gas_id",
                        "in": "path",
                        "description": "Gas ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/gas/maintenance": {
            "get": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Get Maintenance List",
                "operationId": "32bacd83765c019de86ea28faf5cf303",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/MaintenanceResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        },
        "/api/fourleaf/gas/maintenance/parts": {
            "get": {
                "tags": [
                    "Fourleaf - Gas"
                ],
                "summary": "Fourleaf API - Get Maintenance Parts List",
                "operationId": "81be9c74a129358ca1d32a3d3a925a2f",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/DefaultSuccess"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "schema": "string",
                                                        "example": "engine_oil"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/Failed"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Pagination": {
                "title": "Pagination Meta",
                "properties": {
                    "meta": {
                        "properties": {
                            "page": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "example": 1
                            },
                            "limit": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "example": 30
                            },
                            "results": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0,
                                "example": 30
                            },
                            "total_results": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0,
                                "example": 130
                            },
                            "total_pages": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "example": 5
                            },
                            "has_next": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "YearSchema": {
                "title": "Year Schema",
                "type": "integer",
                "format": "int32",
                "maximum": 2999,
                "minimum": 1970,
                "example": 2020
            },
            "DefaultImportSchema": {
                "title": "Default Import Schema",
                "properties": {
                    "acceptedImports": {
                        "type": "integer",
                        "format": "int32",
                        "example": 0
                    },
                    "totalJsonEntries": {
                        "type": "integer",
                        "format": "int32",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "ImportDataCount": {
                "title": "Import Accepted & Total Schema",
                "properties": {
                    "accepted": {
                        "type": "integer",
                        "format": "int32",
                        "example": 0
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "ManagementSchema": {
                "properties": {
                    "count": {
                        "properties": {
                            "entries": {
                                "description": "Total Entries",
                                "type": "integer",
                                "format": "int32",
                                "example": 0
                            },
                            "buckets": {
                                "description": "Total Buckets",
                                "type": "integer",
                                "format": "int32",
                                "example": 0
                            },
                            "partials": {
                                "description": "Total Partials",
                                "type": "integer",
                                "format": "int32",
                                "example": 0
                            }
                        },
                        "type": "object"
                    },
                    "stats": {
                        "properties": {
                            "watchSeconds": {
                                "description": "Watch time in seconds",
                                "type": "integer",
                                "format": "int64",
                                "example": 0
                            },
                            "watch": {
                                "description": "Watch time in days",
                                "type": "string",
                                "example": "10 days"
                            },
                            "watchSubtext": {
                                "description": "Watch time subtext",
                                "type": "string",
                                "example": "10 hours, 10 minutes, 10 seconds"
                            },
                            "rewatchSeconds": {
                                "description": "Watch with Rewatch time in seconds",
                                "type": "integer",
                                "format": "int64",
                                "example": 0
                            },
                            "rewatch": {
                                "description": "Watch with Rewatch time in days",
                                "type": "string",
                                "example": "10 days"
                            },
                            "rewatchSubtext": {
                                "description": "Watch with Rewatch time subtext",
                                "type": "string",
                                "example": "10 hours, 10 minutes, 10 seconds"
                            },
                            "bucketSize": {
                                "description": "Total Buckets size",
                                "type": "string",
                                "example": "0 TB"
                            },
                            "entrySize": {
                                "description": "Total Entries size",
                                "type": "string",
                                "example": "0 TB"
                            },
                            "episodes": {
                                "description": "Total episode count",
                                "type": "integer",
                                "format": "int64",
                                "example": 0
                            },
                            "titles": {
                                "description": "Total title count",
                                "type": "integer",
                                "format": "int64",
                                "example": 0
                            },
                            "seasons": {
                                "description": "Total season count",
                                "type": "integer",
                                "format": "int64",
                                "example": 0
                            }
                        },
                        "type": "object"
                    },
                    "graph": {
                        "properties": {
                            "quality": {
                                "description": "Titles watched per quality",
                                "properties": {
                                    "quality2160": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "quality1080": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "quality720": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "quality480": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "quality360": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            },
                            "ratings": {
                                "description": "Titles watched per rating -- rating values per index",
                                "type": "array",
                                "items": {}
                            },
                            "months": {
                                "description": "Titles watched per month",
                                "properties": {
                                    "jan": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "feb": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "mar": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "apr": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "may": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "jun": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "jul": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "aug": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "sep": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "oct": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "nov": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    },
                                    "dec": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            },
                            "years": {
                                "description": "Titles watched per year",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "year": {
                                            "type": "string",
                                            "example": 2010
                                        },
                                        "value": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "seasons": {
                                "description": "Titles watched per season",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "season": {
                                            "type": "string",
                                            "example": "Spring"
                                        },
                                        "value": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "genres": {
                                "description": "Titles watched per genre",
                                "properties": {
                                    "list": {
                                        "type": "array",
                                        "items": {}
                                    },
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "genre": {
                                                    "type": "string",
                                                    "example": "Action"
                                                },
                                                "value": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BillsElectricity": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "kwh": {
                        "type": "integer",
                        "format": "int16",
                        "maximum": 32767,
                        "minimum": 0,
                        "example": "123"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 12.23
                    },
                    "date": {
                        "type": "string",
                        "example": "Oct 2020"
                    },
                    "costPerKwh": {
                        "type": "number",
                        "format": "float",
                        "example": 12.23
                    }
                },
                "type": "object"
            },
            "Electricity": {
                "properties": {
                    "date": {
                        "type": "string",
                        "example": "2020-10-20 13:00"
                    },
                    "reading": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "example": 1234
                    }
                },
                "type": "object"
            },
            "Gas": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "date": {
                        "type": "string",
                        "example": "2020-10-20"
                    },
                    "fromBars": {
                        "type": "integer",
                        "format": "int32",
                        "maximum": 9,
                        "minimum": 0,
                        "example": 1
                    },
                    "toBars": {
                        "type": "integer",
                        "format": "int32",
                        "maximum": 9,
                        "minimum": 0,
                        "example": 1
                    },
                    "odometer": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "example": 1000
                    },
                    "pricePerLiter": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 12.23
                    },
                    "litersFilled": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 12.23
                    }
                },
                "type": "object"
            },
            "MaintenancePart": {
                "properties": {
                    "date": {
                        "type": "string",
                        "example": "2020-10-20"
                    },
                    "part": {
                        "type": "string",
                        "example": "Engine Oil Change"
                    },
                    "odometer": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "example": 1000
                    }
                },
                "type": "object"
            },
            "MaintenanceType": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "engine_oil"
                    },
                    "label": {
                        "type": "string",
                        "example": "Engine Oil"
                    }
                },
                "type": "object"
            },
            "FourleafSettings": {
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "some key"
                    },
                    "value": {
                        "type": "string",
                        "example": "some value"
                    }
                },
                "type": "object"
            },
            "MaintenanceResource": {
                "properties": {
                    "date": {
                        "type": "string",
                        "example": "2020-10-20"
                    },
                    "description": {
                        "type": "string",
                        "example": "Engine Oil Change"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "others",
                                "ac_coolant",
                                "battery",
                                "brake_fluid",
                                "engine_oil",
                                "power_steering_fluid",
                                "radiator_fluid",
                                "spark_plugs",
                                "tires",
                                "transmission"
                            ],
                            "example": "engine_oil"
                        }
                    },
                    "odometer": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "example": 1000
                    }
                },
                "type": "object"
            },
            "Bucket": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "from": {
                        "type": "string",
                        "maxLength": 1,
                        "minLength": 1,
                        "example": "a"
                    },
                    "to": {
                        "type": "string",
                        "maxLength": 1,
                        "minLength": 1,
                        "example": "d"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2000339066880
                    }
                },
                "type": "object"
            },
            "BucketSimInfo": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "uuid": "e9597119-8452-4f2b-96d8-f2b1b1d2f158",
                    "description": "Sample Buckets"
                }
            },
            "CodecAudio": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "codec": {
                        "type": "string",
                        "example": "AAC 2.0"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CodecVideo": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "codec": {
                        "type": "string",
                        "example": "x264 8bit"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "EntryWatcher": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "label": {
                        "type": "string"
                    },
                    "color": {
                        "description": "Color hex code",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "label": "label",
                    "color": "#ffffff"
                }
            },
            "Genre": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "genre": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "genre": "Comedy"
                }
            },
            "Group": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "uuid": "e9597119-8452-4f2b-96d8-f2b1b1d2f158",
                    "name": "Sample Group Name"
                }
            },
            "PCComponent": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "idType": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Component Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Sample Component Description"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32",
                        "example": 10000
                    },
                    "priceEstimate": {
                        "type": "integer",
                        "format": "int32",
                        "example": 15000
                    },
                    "purchaseDate": {
                        "type": "string",
                        "example": "2020-10-01"
                    },
                    "purchaseLocation": {
                        "type": "string",
                        "example": "Store Name"
                    },
                    "purchaseNotes": {
                        "type": "string",
                        "example": "Some notes"
                    },
                    "isOnhand": {
                        "type": "boolean",
                        "example": true
                    },
                    "isPurchased": {
                        "type": "boolean",
                        "example": true
                    },
                    "descriptiveName": {
                        "description": "{name} ({price})",
                        "type": "string",
                        "example": "Sample Component Name (10,000)"
                    }
                },
                "type": "object"
            },
            "PCComponentType": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "cpu"
                    },
                    "name": {
                        "type": "string",
                        "example": "CPU"
                    },
                    "is_peripheral": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "PCOwner": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Priority": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "High",
                            "Normal",
                            "Low"
                        ]
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "priority": "High"
                }
            },
            "Quality": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "quality": {
                        "type": "string",
                        "enum": [
                            "4K 2160",
                            "FHD 1080p",
                            "HD 720p",
                            "HQ 480p",
                            "LQ 360p"
                        ]
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "quality": "4K 2160p"
                }
            },
            "Sequence": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Summer List"
                    },
                    "dateFrom": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-01"
                    },
                    "dateTo": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-02-01"
                    }
                },
                "type": "object"
            },
            "UserToken": {
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "alphanumeric token"
                    }
                },
                "type": "object"
            },
            "UserDetails": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "username": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AnilistSearchResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "12345"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    }
                },
                "type": "object"
            },
            "AnilistTitleResource": {
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "episodes": {
                        "type": "integer",
                        "format": "int32",
                        "example": 100
                    },
                    "premiered": {
                        "type": "string",
                        "example": "Winter 2020"
                    }
                },
                "type": "object"
            },
            "DefaultSuccess": {
                "properties": {
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 200
                    },
                    "message": {
                        "type": "string",
                        "example": "Success"
                    }
                },
                "type": "object"
            },
            "EntryBySequenceResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "quality": {
                        "type": "string",
                        "enum": [
                            "4K 2160",
                            "FHD 1080p",
                            "HD 720p",
                            "HQ 480p",
                            "LQ 360p"
                        ],
                        "example": "4K 2160p"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "dateFinished": {
                        "type": "string",
                        "example": "Mar 01, 2011"
                    },
                    "rewatched": {
                        "type": "boolean",
                        "example": false
                    },
                    "filesize": {
                        "type": "string",
                        "example": "10.25 GB"
                    },
                    "episodes": {
                        "type": "integer",
                        "format": "int32",
                        "example": 25
                    },
                    "ovas": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "specials": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "EntryOffquelResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "89e3be00-9d4f-4c4f-a99f-c12cbfba04ab"
                    },
                    "title": {
                        "type": "string",
                        "example": "Offquel Title"
                    }
                },
                "type": "object"
            },
            "EntryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "quality": {
                        "type": "string",
                        "enum": [
                            "4K 2160",
                            "FHD 1080p",
                            "HD 720p",
                            "HQ 480p",
                            "LQ 360p"
                        ],
                        "example": "4K 2160p"
                    },
                    "idQuality": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "dateInitFinishedRaw": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2001-01-01T00:00:00.000000Z"
                    },
                    "dateInitFinished": {
                        "type": "string",
                        "example": "Jan 01, 2001"
                    },
                    "dateLastFinished": {
                        "type": "string",
                        "example": "Mar 01, 2011"
                    },
                    "durationRaw": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10000
                    },
                    "duration": {
                        "type": "string",
                        "example": "2 hours 46 minutes 40 seconds"
                    },
                    "filesizeRaw": {
                        "type": "integer",
                        "format": "int64",
                        "example": 21331439861
                    },
                    "filesize": {
                        "type": "string",
                        "example": "19.87 GB"
                    },
                    "episodes": {
                        "type": "integer",
                        "format": "int32",
                        "example": 25
                    },
                    "ovas": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "specials": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "seasonNumber": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "seasonFirstTitle": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "prequelTitle": {
                        "type": "string",
                        "example": "Prequel Title"
                    },
                    "prequel": {
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9b712dbe-ff81-41d4-b027-ee87cea4da99"
                            },
                            "title": {
                                "type": "string",
                                "example": "Prequel Title"
                            }
                        },
                        "type": "object"
                    },
                    "sequelTitle": {
                        "type": "string",
                        "example": "Sequel Title"
                    },
                    "sequel": {
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "08d0f87f-6432-47bc-b6bd-c856abbad90f"
                            },
                            "title": {
                                "type": "string",
                                "example": "Sequel Title"
                            }
                        },
                        "type": "object"
                    },
                    "encoder": {
                        "type": "string",
                        "example": "encoder-encoder2-encoder3"
                    },
                    "encoderVideo": {
                        "type": "string",
                        "example": "encoder"
                    },
                    "encoderAudio": {
                        "type": "string",
                        "example": "encoder2"
                    },
                    "encoderSubs": {
                        "type": "string",
                        "example": "encoder3"
                    },
                    "releaseSeason": {
                        "type": "string",
                        "enum": [
                            "Winter",
                            "Spring",
                            "Summer",
                            "Fall"
                        ],
                        "example": "Winter"
                    },
                    "releaseYear": {
                        "type": "integer",
                        "format": "int32",
                        "example": 2000
                    },
                    "release": {
                        "type": "string",
                        "example": "Winter 2000"
                    },
                    "variants": {
                        "type": "string",
                        "example": "Variant title"
                    },
                    "remarks": {
                        "type": "string",
                        "example": "Some remarks"
                    },
                    "codecHDR": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "idCodecVideo": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "codecVideo": {
                        "type": "string",
                        "example": "x264 8bit"
                    },
                    "idCodecAudio": {
                        "type": "integer",
                        "format": "int32",
                        "example": 4
                    },
                    "codecAudio": {
                        "type": "string",
                        "example": "FLAC 7.1"
                    },
                    "offquels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryOffquelResource"
                        }
                    },
                    "rewatches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntryRewatchResource"
                        }
                    },
                    "ratingAverage": {
                        "type": "number",
                        "example": 4.5
                    },
                    "rating": {
                        "properties": {
                            "audio": {
                                "type": "integer",
                                "format": "int32",
                                "example": 6
                            },
                            "enjoyment": {
                                "type": "integer",
                                "format": "int32",
                                "example": 5
                            },
                            "graphics": {
                                "type": "integer",
                                "format": "int32",
                                "example": 4
                            },
                            "plot": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                            }
                        },
                        "type": "object"
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenreResource"
                        }
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "example": "{{ image url }}"
                    },
                    "watcher": {
                        "$ref": "#/components/schemas/EntryWatcher"
                    },
                    "idWatcher": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "EntryRewatchResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "af846c35-a51e-4534-9559-c75114e61d84"
                    },
                    "dateIso": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2011-03-01T00:00:00.000000Z"
                    },
                    "date": {
                        "type": "string",
                        "example": "March 01, 2011"
                    }
                },
                "type": "object"
            },
            "EntrySummaryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "quality": {
                        "type": "string",
                        "enum": [
                            "4K 2160",
                            "FHD 1080p",
                            "HD 720p",
                            "HQ 480p",
                            "LQ 360p"
                        ],
                        "example": "4K 2160p"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "dateFinished": {
                        "type": "string",
                        "example": "Mar 01, 2011"
                    },
                    "filesize": {
                        "type": "string",
                        "example": "10.25 GB"
                    },
                    "rewatched": {
                        "type": "boolean",
                        "example": false
                    },
                    "rewatchCount": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "episodes": {
                        "type": "integer",
                        "format": "int32",
                        "example": 25
                    },
                    "ovas": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "specials": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "encoder": {
                        "type": "string",
                        "example": "encoder—encoder2"
                    },
                    "release": {
                        "type": "string",
                        "example": "Spring 2017"
                    },
                    "remarks": {
                        "type": "string",
                        "example": "Some remarks"
                    },
                    "rating": {
                        "type": "number",
                        "example": 7.5
                    },
                    "ratingOver5": {
                        "type": "number",
                        "example": 3.75
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenreResource"
                        }
                    },
                    "watcher": {
                        "$ref": "#/components/schemas/EntryWatcher"
                    }
                },
                "type": "object"
            },
            "GenreResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "genre": {
                        "type": "string",
                        "example": "Genre Name"
                    }
                },
                "type": "object"
            },
            "PCComponentResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "idType": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Component Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Sample Component Description"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32",
                        "example": 10000
                    },
                    "priceEstimate": {
                        "type": "integer",
                        "format": "int32",
                        "example": 15000
                    },
                    "purchaseDate": {
                        "type": "string",
                        "example": "2020-10-01"
                    },
                    "purchaseDateFormatted": {
                        "type": "string",
                        "example": "Oct 01, 2020"
                    },
                    "purchaseLocation": {
                        "type": "string",
                        "example": "Store Name"
                    },
                    "purchaseNotes": {
                        "type": "string",
                        "example": "Some notes"
                    },
                    "isOnhand": {
                        "type": "boolean",
                        "example": true
                    },
                    "isPurchased": {
                        "type": "boolean",
                        "example": true
                    },
                    "descriptiveName": {
                        "description": "{name} ({price})",
                        "type": "string",
                        "example": "Sample Component Name (10,000)"
                    }
                },
                "type": "object"
            },
            "PCInfoResource": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/PCOwner"
                    },
                    "label": {
                        "type": "string",
                        "example": "Upcoming Setup"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PCSetupSummaryResource"
                        }
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": false
                    },
                    "isHidden": {
                        "type": "boolean",
                        "example": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-10-01"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-10-01"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-10-01"
                    }
                },
                "type": "object"
            },
            "PCInfoSummaryResource": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/PCOwner"
                    },
                    "label": {
                        "type": "string",
                        "example": "Upcoming Setup"
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": false
                    },
                    "isHidden": {
                        "type": "boolean",
                        "example": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-10-01"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-10-01"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-10-01"
                    }
                },
                "type": "object"
            },
            "PCSetupSummaryResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "type": {
                        "$ref": "#/components/schemas/PCComponentType"
                    },
                    "name": {
                        "type": "string",
                        "example": "Component Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Component Description"
                    },
                    "count": {
                        "type": "integer",
                        "example": 2
                    },
                    "isHidden": {
                        "type": "boolean",
                        "example": false
                    },
                    "price": {
                        "type": "integer",
                        "example": 1234
                    },
                    "priceFormatted": {
                        "type": "string",
                        "example": "1,234"
                    },
                    "priceEstimate": {
                        "type": "integer",
                        "example": 1234
                    },
                    "priceEstimateFormatted": {
                        "type": "string",
                        "example": "1,234"
                    },
                    "purhcaseDate": {
                        "type": "string",
                        "example": "2020-10-10"
                    },
                    "purhcaseLocation": {
                        "type": "string",
                        "example": "Location"
                    },
                    "purhcaseNotes": {
                        "type": "string",
                        "example": "Notes"
                    },
                    "isOnhand": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "PartialResource": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "High",
                            "Normal",
                            "Low"
                        ],
                        "example": "High"
                    }
                },
                "type": "object"
            },
            "PartialWithCatalogResource": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
                    },
                    "catalog": {
                        "type": "string",
                        "example": "Spring 2020"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Title"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "High",
                            "Normal",
                            "Low"
                        ],
                        "example": "High"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "AnilistOtherErrorResponse": {
                "description": "Other Error Responses",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "AnilistConfigErrorExample": {
                                "$ref": "#/components/examples/AnilistConfigErrorExample"
                            },
                            "AnilistParsingErrorExample": {
                                "$ref": "#/components/examples/AnilistParsingErrorExample"
                            }
                        }
                    }
                }
            },
            "AnilistConnectionErrorResponse": {
                "description": "Connection Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 503,
                            "message": "Issues in connecting to AniList servers"
                        }
                    }
                }
            },
            "AnilistRateLimitErrorResponse": {
                "description": "Rate Limit Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 429,
                            "message": "AniList rate limit was reached. Please retry in ## seconds."
                        }
                    }
                }
            },
            "AuthInvalidCredentialsResponse": {
                "description": "Invalid Credentials Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 401,
                            "message": "Credentials does not match."
                        }
                    }
                }
            },
            "EntryGenreResponse": {
                "description": "Invalid Genre Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "data": {
                                    "properties": {
                                        "genres": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 401,
                            "data": {
                                "genres": [
                                    "{{ validation message }}"
                                ]
                            }
                        }
                    }
                }
            },
            "EntryParsingResponse": {
                "description": "Partial Parsing Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "data": {
                                    "properties": {
                                        "offquel_id": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 401,
                            "data": {
                                "offquel_id": "{{ validation message }}"
                            }
                        }
                    }
                }
            },
            "InvalidRoleException": {
                "description": "Invaid Role Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 403,
                            "message": "You should be an admin to access this"
                        }
                    }
                }
            },
            "JsonParsingException": {
                "description": "Partial Parsing Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 400,
                            "message": "The file is an invalid JSON"
                        }
                    }
                }
            },
            "PartialParsingResponse": {
                "description": "Partial Parsing Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 400,
                            "message": "There was a problem in parsing your request"
                        }
                    }
                }
            },
            "FourleafGasInvalidYearResponse": {
                "description": "Fourleaf - Gas Invalid Year Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 401,
                            "message": "The year is invalid"
                        }
                    }
                }
            },
            "Success": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 200,
                            "message": "Success"
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 400,
                            "message": "There was a problem in parsing your request"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 401,
                            "message": "Unauthorized"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 404,
                            "message": "The provided ID is invalid, or the item does not exist"
                        }
                    }
                }
            },
            "Failed": {
                "description": "Failed",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 500,
                            "message": "Failed"
                        }
                    }
                }
            },
            "Unavailable": {
                "description": "Unavailable",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "status": 503,
                            "message": "Service unavailable"
                        }
                    }
                }
            }
        },
        "parameters": {
            "fourleaf_bills_electricity_add_edit_date": {
                "name": "date",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "2020-10-20"
            },
            "fourleaf_bills_electricity_add_edit_kwh": {
                "name": "kwh",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int16",
                    "maximum": 32767,
                    "minimum": 0
                }
            },
            "fourleaf_bills_electricity_add_edit_cost": {
                "name": "cost",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "number",
                    "minimum": 0
                }
            },
            "fourleaf_bills_electricity_get_year": {
                "name": "year",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/YearSchema"
                },
                "example": "2020"
            },
            "fourleaf_electricity_add_edit_datetime": {
                "name": "datetime",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "2020-10-20 13:00"
            },
            "fourleaf_electricity_add_edit_reading": {
                "name": "reading",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                }
            },
            "fourleaf_electricity_get_year": {
                "name": "year",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1900
                },
                "example": 2020
            },
            "fourleaf_electricity_get_month": {
                "name": "month",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 12,
                    "minimum": 1
                },
                "example": 1
            },
            "fourleaf_gas_add_edit_fuel_date": {
                "name": "date",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "2020-10-20"
            },
            "fourleaf_gas_add_edit_fuel_from_bars": {
                "name": "from_bars",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 9,
                    "minimum": 0
                }
            },
            "fourleaf_gas_add_edit_fuel_to_bars": {
                "name": "to_bars",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 9,
                    "minimum": 0
                }
            },
            "fourleaf_gas_add_edit_fuel_odometer": {
                "name": "odometer",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 100000,
                    "minimum": 0
                }
            },
            "fourleaf_gas_add_edit_fuel_price_per_liter": {
                "name": "price_per_liter",
                "in": "query",
                "schema": {
                    "type": "number",
                    "maximum": 150,
                    "minimum": 0
                }
            },
            "fourleaf_gas_add_edit_fuel_liters_filled": {
                "name": "liters_filled",
                "in": "query",
                "schema": {
                    "type": "number",
                    "maximum": 40,
                    "minimum": 0
                }
            },
            "fourleaf_gas_get_fuel_column": {
                "name": "column",
                "in": "query",
                "description": "Order - Column to order",
                "schema": {
                    "type": "string",
                    "default": "odometer"
                },
                "example": "odometer"
            },
            "fourleaf_gas_get_fuel_order": {
                "name": "order",
                "in": "query",
                "description": "Order - Direction of order column",
                "schema": {
                    "type": "string",
                    "default": "asc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            },
            "fourleaf_gas_get_fuel_page": {
                "name": "page",
                "in": "query",
                "description": "Pagination - Page to query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1
                },
                "example": 1
            },
            "fourleaf_gas_get_fuel_limit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination - Page item limit",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 30,
                    "maximum": 9999,
                    "minimum": 1
                },
                "example": 30
            },
            "fourleaf_gas_get_odo_year": {
                "name": "year",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/YearSchema"
                },
                "example": "2020"
            },
            "fourleaf_gas_get_gas_avg_efficiency_type": {
                "name": "avg_efficiency_type",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "all",
                    "enum": [
                        "all",
                        "last5",
                        "last10"
                    ]
                }
            },
            "fourleaf_gas_get_gas_efficiency_graph_type": {
                "name": "efficiency_graph_type",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "last20data",
                    "enum": [
                        "last20data",
                        "last12mos"
                    ]
                }
            },
            "user_add_edit_username": {
                "name": "username",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 4
                },
                "example": "username"
            },
            "user_add_edit_password": {
                "name": "password",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 4
                },
                "example": "password"
            },
            "user_add_edit_password_confirmation": {
                "name": "password_confirmation",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 4
                },
                "example": "password"
            },
            "user_login_username": {
                "name": "username",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "username"
            },
            "user_login_password": {
                "name": "password",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "password"
            },
            "user_register_username": {
                "name": "username",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 4
                },
                "example": "username"
            },
            "user_register_password": {
                "name": "password",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 4
                },
                "example": "password"
            },
            "user_register_password_confirmation": {
                "name": "password_confirmation",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 4
                },
                "example": "password"
            },
            "user_register_root_password": {
                "name": "root_password",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "root-password"
            },
            "bucket_sim_add_edit_description": {
                "name": "description",
                "in": "query",
                "description": "Bucket Sim Description",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "example": "Sample 2 buckets"
            },
            "bucket_sim_add_edit_buckets": {
                "name": "buckets",
                "in": "query",
                "description": "Bucket JSON String",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "[{\"from\":\"a\",\"to\":\"i\",\"size\":2000339066880},{\"from\":\"j\",\"to\":\"z\",\"size\":2000339066880}]"
            },
            "bucket_sim_preview_buckets": {
                "name": "buckets",
                "in": "query",
                "description": "Bucket JSON String",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "[{\"from\":\"a\",\"to\":\"i\",\"size\":2000339066880},{\"from\":\"j\",\"to\":\"z\",\"size\":2000339066880}]"
            },
            "catalog_add_edit_season": {
                "name": "season",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "Winter",
                        "Spring",
                        "Summer",
                        "Fall"
                    ]
                },
                "example": "Winter"
            },
            "catalog_add_edit_year": {
                "name": "year",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/YearSchema"
                },
                "example": "2020"
            },
            "codec_add_edit_codec": {
                "name": "codec",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                },
                "example": "Sample Codec"
            },
            "codec_add_edit_order": {
                "name": "order",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int8",
                    "maximum": 127,
                    "minimum": 1
                },
                "example": "1"
            },
            "entry_add_edit_id_quality": {
                "name": "id_quality",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_title": {
                "name": "title",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            },
            "entry_add_edit_date_finished": {
                "name": "date_finished",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "date"
                }
            },
            "entry_add_edit_duration": {
                "name": "duration",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "entry_add_edit_filesize": {
                "name": "filesize",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "entry_add_edit_episodes": {
                "name": "episodes",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_ovas": {
                "name": "ovas",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_specials": {
                "name": "specials",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_season_number": {
                "name": "season_number",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_season_first_title_id": {
                "name": "season_first_title_id",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "entry_add_edit_prequel_id": {
                "name": "prequel_id",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "entry_add_edit_sequel_id": {
                "name": "sequel_id",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "entry_add_edit_encoder_video": {
                "name": "encoder_video",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_add_edit_encoder_audio": {
                "name": "encoder_audio",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_add_edit_encoder_subs": {
                "name": "encoder_subs",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_add_edit_release_year": {
                "name": "release_year",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/YearSchema"
                },
                "example": ""
            },
            "entry_add_edit_release_season": {
                "name": "release_season",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "Winter",
                        "Spring",
                        "Summer",
                        "Fall"
                    ]
                }
            },
            "entry_add_edit_variants": {
                "name": "variants",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_add_edit_remarks": {
                "name": "remarks",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_add_edit_id_codec_audio": {
                "name": "id_codec_audio",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_id_codec_video": {
                "name": "id_codec_video",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_edit_codec_hdr": {
                "name": "codec_hdr",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "entry_add_edit_genres": {
                "name": "genres",
                "in": "query",
                "description": "Comma-separated genre IDs",
                "schema": {
                    "type": "string"
                }
            },
            "entry_add_edit_id_watcher": {
                "name": "id_watcher",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_add_rewatch_date_rewatched": {
                "name": "date_rewatched",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "date"
                },
                "example": "2022-01-23"
            },
            "entry_get_all_query": {
                "name": "query",
                "in": "query",
                "description": "Search - Item to search for in haystack (column)",
                "schema": {
                    "type": "string"
                },
                "example": "item name"
            },
            "entry_get_all_column": {
                "name": "column",
                "in": "query",
                "description": "Order - Column to order",
                "schema": {
                    "type": "string",
                    "default": "id_quality"
                },
                "example": "id_quality"
            },
            "entry_get_all_order": {
                "name": "order",
                "in": "query",
                "description": "Order - Direction of order column",
                "schema": {
                    "type": "string",
                    "default": "asc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            },
            "entry_get_all_page": {
                "name": "page",
                "in": "query",
                "description": "Pagination - Page to query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1
                },
                "example": 1
            },
            "entry_get_all_limit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination - Page item limit",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 30,
                    "maximum": 9999,
                    "minimum": 1
                },
                "example": 30
            },
            "entry_last_items": {
                "name": "items",
                "in": "query",
                "description": "Number of items to load",
                "schema": {
                    "type": "integer",
                    "format": "int8",
                    "default": 20,
                    "maximum": 127,
                    "minimum": 1
                },
                "example": 20
            },
            "entry_offquels_data": {
                "name": "data",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "data[0]=e9597119-8452-4f2b-96d8-f2b1b1d2f158&data[1]=786f90ce-87a6-4096-833b-a4a1db740f3d"
            },
            "entry_ratings_audio": {
                "name": "audio",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 5,
                    "minimum": 1
                },
                "example": 10
            },
            "entry_ratings_enjoyment": {
                "name": "enjoyment",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 5,
                    "minimum": 1
                },
                "example": 10
            },
            "entry_ratings_graphics": {
                "name": "graphics",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 5,
                    "minimum": 1
                },
                "example": 10
            },
            "entry_ratings_plot": {
                "name": "plot",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 5,
                    "minimum": 1
                },
                "example": 10
            },
            "entry_search_quality": {
                "name": "quality",
                "in": "query",
                "description": "Range or Comma separated values<br>Could be common terms: 4K, UHD<br>Vertical pixels: 1080, 1080p<br>Range: 1080p to UHD",
                "schema": {
                    "type": "string"
                },
                "example": "UHD"
            },
            "entry_search_title": {
                "name": "title",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "example": "sample title"
            },
            "entry_search_date": {
                "name": "date",
                "in": "query",
                "description": "Could be a date or date range: '{date}', '{date} to {date}', 'from {date} to {date}';<br>Comparators: '> 2024-10-20', '>= 2024', 'gt 2024-10-20', 'gte 2024', 'greater than 2024-10', 'greater than or equal 2024-10-20'",
                "schema": {
                    "type": "string"
                },
                "example": "2024-10 to 2024-11"
            },
            "entry_search_filesize": {
                "name": "filesize",
                "in": "query",
                "description": "Could be common terms or byte value: '3 GB', 3000000000<br>Comparators: '> 3 GB'",
                "schema": {
                    "type": "string"
                },
                "example": "> 3 GB"
            },
            "entry_search_episodes": {
                "name": "episodes",
                "in": "query",
                "description": "Could be absolute value: 3<br>Range: 10 to 12<br>Comparators > 12",
                "schema": {
                    "type": "string"
                },
                "example": ">= 12"
            },
            "entry_search_ovas": {
                "name": "ovas",
                "in": "query",
                "description": "Could be absolute value: 3<br>Range: 10 to 12<br>Comparators > 12",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_specials": {
                "name": "specials",
                "in": "query",
                "description": "Could be absolute value: 3<br>Range: 10 to 12<br>Comparators > 12",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_encoder": {
                "name": "encoder",
                "in": "query",
                "description": "This searches / matches for all Video, Audio, Sub Encoders",
                "schema": {
                    "type": "string"
                },
                "example": "sample encoder"
            },
            "entry_search_encoder_video": {
                "name": "encoder_video",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_encoder_audio": {
                "name": "encoder_audio",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_encoder_subs": {
                "name": "encoder_subs",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_release": {
                "name": "release",
                "in": "query",
                "description": "Could be absolute: spring, 2020, 'spring 2020'<br>Range: '2020 to 2021', 'summer 2020 to spring 2021', '2020 summer to 2022'<br>Comparators: '> spring 2023'",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_remarks": {
                "name": "remarks",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_rating": {
                "name": "rating",
                "in": "query",
                "description": "Max value should be 10<br>Could be absolute value: 3<br>Range: 5 to 10<br>Comparators < 7",
                "schema": {
                    "type": "string"
                },
                "example": ">= 5"
            },
            "entry_search_has_remarks": {
                "name": "has_remarks",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "any",
                    "enum": [
                        "any",
                        "yes",
                        "no"
                    ]
                },
                "example": "any"
            },
            "entry_search_has_image": {
                "name": "has_image",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "any",
                    "enum": [
                        "any",
                        "yes",
                        "no"
                    ]
                },
                "example": "any"
            },
            "entry_search_is_hdr": {
                "name": "is_hdr",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "any",
                    "enum": [
                        "any",
                        "yes",
                        "no"
                    ]
                },
                "example": "any"
            },
            "entry_search_codec_video": {
                "name": "codec_video",
                "in": "query",
                "description": "Comma separated IDs of video codecs",
                "schema": {
                    "type": "string"
                },
                "example": "1,2"
            },
            "entry_search_codec_audio": {
                "name": "codec_audio",
                "in": "query",
                "description": "Comma separated IDs of audio codecs",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_genres": {
                "name": "genres",
                "in": "query",
                "description": "Comma separated IDs of genres",
                "schema": {
                    "type": "string"
                }
            },
            "entry_search_watcher": {
                "name": "watcher",
                "in": "query",
                "description": "ID of watcher (null = any, 0 = null in DB)",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "entry_search_column": {
                "name": "column",
                "in": "query",
                "description": "Order - Column to order",
                "schema": {
                    "type": "string",
                    "default": "id_quality"
                },
                "example": "id_quality"
            },
            "entry_search_order": {
                "name": "order",
                "in": "query",
                "description": "Order - Direction of order column",
                "schema": {
                    "type": "string",
                    "default": "asc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            },
            "entry_search_titles_id": {
                "name": "id",
                "in": "query",
                "description": "Entry ID, search should by default include this entry",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "example": "87d66263-269c-4f7c-9fb8-dd78c4408ff6"
            },
            "entry_search_titles_id_excluded": {
                "name": "id_excluded",
                "in": "query",
                "description": "If true, id parameter is exluded instead of included",
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "entry_search_titles_needle": {
                "name": "needle",
                "in": "query",
                "description": "Search query; When blank is passed, get 10 alphanumerically arranged titles",
                "schema": {
                    "type": "string"
                },
                "example": "title"
            },
            "group_add_edit_name": {
                "name": "name",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "example": "Sample Group Name"
            },
            "log_search_column": {
                "name": "column",
                "in": "query",
                "description": "Order - Column to order",
                "schema": {
                    "type": "string",
                    "default": "created_at"
                },
                "example": "created_at"
            },
            "log_search_order": {
                "name": "order",
                "in": "query",
                "description": "Order - Direction of order column",
                "schema": {
                    "type": "string",
                    "default": "desc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            },
            "log_search_page": {
                "name": "page",
                "in": "query",
                "description": "Pagination - Page to query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1
                },
                "example": 1
            },
            "log_search_limit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination - Page item limit",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 30,
                    "maximum": 9999,
                    "minimum": 1
                },
                "example": 30
            },
            "management_get_by_year_year": {
                "name": "year",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/YearSchema"
                },
                "example": "2020"
            },
            "pc_add_edit_component_id_type": {
                "name": "id_type",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 1
            },
            "pc_add_edit_component_name": {
                "name": "name",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            },
            "pc_add_edit_component_description": {
                "name": "description",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            },
            "pc_add_edit_component_price": {
                "name": "price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                }
            },
            "pc_add_edit_component_purchase_date": {
                "name": "purchase_date",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "date"
                }
            },
            "pc_add_edit_component_purchase_location": {
                "name": "purchase_location",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            },
            "pc_add_edit_component_purchase_notes": {
                "name": "purchase_notes",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            },
            "pc_add_edit_component_is_onhand": {
                "name": "is_onhand",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "pc_add_edit_component_type_type": {
                "name": "type",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "example": "sample type"
            },
            "pc_add_edit_component_type_name": {
                "name": "name",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "example": "sample type"
            },
            "pc_add_edit_component_type_is_peripheral": {
                "name": "is_peripheral",
                "in": "query",
                "schema": {
                    "type": "boolean"
                },
                "example": true
            },
            "pc_add_edit_info_id_owner": {
                "name": "id_owner",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "pc_add_edit_info_label": {
                "name": "label",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                }
            },
            "pc_add_edit_info_is_active": {
                "name": "is_active",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "pc_add_edit_info_is_hidden": {
                "name": "is_hidden",
                "in": "query",
                "schema": {
                    "type": "boolean"
                }
            },
            "pc_add_edit_info_components": {
                "name": "components",
                "in": "query",
                "description": "PC Setup Components JSON String",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "[{\"id_component\":1,\"count\":1,\"is_hidden\":false},{\"id_component\":10,\"count\":2,\"is_hidden\":true}]"
            },
            "pc_add_edit_owner_name": {
                "name": "name",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                }
            },
            "pc_get_owners_show_hidden": {
                "name": "show_hidden",
                "in": "query",
                "schema": {
                    "type": "boolean"
                },
                "example": true
            },
            "pc_search_component_id_type": {
                "name": "id_type",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 1
            },
            "pc_search_component_limit": {
                "name": "limit",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 9999,
                    "minimum": 1
                },
                "example": 1
            },
            "pc_setup_add_edit_label": {
                "name": "label",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "example": "Sample Label"
            },
            "pc_setup_add_edit_is_current": {
                "name": "is_current",
                "in": "query",
                "schema": {
                    "type": "boolean"
                },
                "example": false
            },
            "pc_setup_add_edit_is_future": {
                "name": "is_future",
                "in": "query",
                "schema": {
                    "type": "boolean"
                },
                "example": false
            },
            "pc_setup_add_edit_is_server": {
                "name": "is_server",
                "in": "query",
                "schema": {
                    "type": "boolean"
                },
                "example": false
            },
            "pc_setup_add_edit_cpu": {
                "name": "cpu",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample CPU"
            },
            "pc_setup_add_edit_cpu_price": {
                "name": "cpu_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_cpu_sub": {
                "name": "cpu_sub",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample CPU Subtext"
            },
            "pc_setup_add_edit_cpu_sub2": {
                "name": "cpu_sub2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample CPU Subtext"
            },
            "pc_setup_add_edit_ram": {
                "name": "ram",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample RAM"
            },
            "pc_setup_add_edit_ram_price": {
                "name": "ram_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_ram_sub": {
                "name": "ram_sub",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample RAM Subtext"
            },
            "pc_setup_add_edit_gpu": {
                "name": "gpu",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample GPU"
            },
            "pc_setup_add_edit_gpu_price": {
                "name": "gpu_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_gpu_sub": {
                "name": "gpu_sub",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample GPU Subtext"
            },
            "pc_setup_add_edit_motherboard": {
                "name": "motherboard",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Motherboard"
            },
            "pc_setup_add_edit_motherboard_price": {
                "name": "motherboard_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_psu": {
                "name": "psu",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample PSU"
            },
            "pc_setup_add_edit_psu_price": {
                "name": "psu_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_cooler": {
                "name": "cooler",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Cooler"
            },
            "pc_setup_add_edit_cooler_price": {
                "name": "cooler_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_cooler_acc": {
                "name": "cooler_acc",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Cooler Accessory"
            },
            "pc_setup_add_edit_cooler_acc_price": {
                "name": "cooler_acc_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_ssd_1": {
                "name": "ssd_1",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample SSD"
            },
            "pc_setup_add_edit_ssd_1_price": {
                "name": "ssd_1_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_ssd_2": {
                "name": "ssd_2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample SSD"
            },
            "pc_setup_add_edit_ssd_2_price": {
                "name": "ssd_2_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_ssd_3": {
                "name": "ssd_3",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample SSD"
            },
            "pc_setup_add_edit_ssd_3_price": {
                "name": "ssd_3_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_ssd_4": {
                "name": "ssd_4",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample SSD"
            },
            "pc_setup_add_edit_ssd_4_price": {
                "name": "ssd_4_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_hdd_1": {
                "name": "hdd_1",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample HDD"
            },
            "pc_setup_add_edit_hdd_1_price": {
                "name": "hdd_1_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_hdd_2": {
                "name": "hdd_2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample HDD"
            },
            "pc_setup_add_edit_hdd_2_price": {
                "name": "hdd_2_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_hdd_3": {
                "name": "hdd_3",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample HDD"
            },
            "pc_setup_add_edit_hdd_3_price": {
                "name": "hdd_3_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_hdd_4": {
                "name": "hdd_4",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample HDD"
            },
            "pc_setup_add_edit_hdd_4_price": {
                "name": "hdd_4_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_case": {
                "name": "case",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Case"
            },
            "pc_setup_add_edit_case_price": {
                "name": "case_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_case_fans_1": {
                "name": "case_fans_1",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Case Fans"
            },
            "pc_setup_add_edit_case_fans_1_price": {
                "name": "case_fans_1_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_case_fans_2": {
                "name": "case_fans_2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Case Fans"
            },
            "pc_setup_add_edit_case_fans_2_price": {
                "name": "case_fans_2_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_case_fans_3": {
                "name": "case_fans_3",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Case Fans"
            },
            "pc_setup_add_edit_case_fans_3_price": {
                "name": "case_fans_3_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_case_fans_4": {
                "name": "case_fans_4",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Case Fans"
            },
            "pc_setup_add_edit_case_fans_4_price": {
                "name": "case_fans_4_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_monitor": {
                "name": "monitor",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Monitor"
            },
            "pc_setup_add_edit_monitor_price": {
                "name": "monitor_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_monitor_sub": {
                "name": "monitor_sub",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Monitor Subtext"
            },
            "pc_setup_add_edit_monitor_acc_1": {
                "name": "monitor_acc_1",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Monitor Accessory"
            },
            "pc_setup_add_edit_monitor_acc_1_price": {
                "name": "monitor_acc_1_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_monitor_acc_2": {
                "name": "monitor_acc_2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Monitor Accessory"
            },
            "pc_setup_add_edit_monitor_acc_2_price": {
                "name": "monitor_acc_2_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_keyboard": {
                "name": "keyboard",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Keyboard"
            },
            "pc_setup_add_edit_keyboard_price": {
                "name": "keyboard_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_keyboard_sub": {
                "name": "keyboard_sub",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Keyboard Subtext"
            },
            "pc_setup_add_edit_keyboard_sub2": {
                "name": "keyboard_sub2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Keyboard Subtext"
            },
            "pc_setup_add_edit_keyboard_acc_1": {
                "name": "keyboard_acc_1",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Keyboard Accessory 1"
            },
            "pc_setup_add_edit_keyboard_acc_1_price": {
                "name": "keyboard_acc_1_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_keyboard_acc_2": {
                "name": "keyboard_acc_2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Keyboard Accessory 2"
            },
            "pc_setup_add_edit_keyboard_acc_2_price": {
                "name": "keyboard_acc_2_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_mouse": {
                "name": "mouse",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Mouse"
            },
            "pc_setup_add_edit_mouse_price": {
                "name": "mouse_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_speakers": {
                "name": "speakers",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Speakers"
            },
            "pc_setup_add_edit_speakers_price": {
                "name": "speakers_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_wifi": {
                "name": "wifi",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample WiFi Card"
            },
            "pc_setup_add_edit_wifi_price": {
                "name": "wifi_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_headset_1": {
                "name": "headset_1",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Headset 1"
            },
            "pc_setup_add_edit_headset_1_price": {
                "name": "headset_1_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_headset_2": {
                "name": "headset_2",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Headset 2"
            },
            "pc_setup_add_edit_headset_2_price": {
                "name": "headset_2_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_mic": {
                "name": "mic",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Microphone"
            },
            "pc_setup_add_edit_mic_price": {
                "name": "mic_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_mic_acc": {
                "name": "mic_acc",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Microphone Accessory"
            },
            "pc_setup_add_edit_mic_acc_price": {
                "name": "mic_acc_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_audio_interface": {
                "name": "audio_interface",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Audio Interface"
            },
            "pc_setup_add_edit_audio_interface_price": {
                "name": "audio_interface_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_equalizer": {
                "name": "equalizer",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Equalizer"
            },
            "pc_setup_add_edit_equalizer_price": {
                "name": "equalizer_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "pc_setup_add_edit_amplifier": {
                "name": "amplifier",
                "in": "query",
                "schema": {
                    "type": "string",
                    "maxLength": 64
                },
                "example": "Sample Amplifier"
            },
            "pc_setup_add_edit_amplifier_price": {
                "name": "amplifier_price",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 100
            },
            "partial_add_edit_multiple_data": {
                "name": "data",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "low[0]=Title Low 1&normal[0]=Title Normal 1&normal[1]=Title Normal 2&high[0]=Title High 1"
            },
            "partial_add_edit_multiple_season": {
                "name": "season",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "Winter",
                        "Spring",
                        "Summer",
                        "Fall"
                    ]
                },
                "example": "Winter"
            },
            "partial_add_edit_multiple_year": {
                "name": "year",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/YearSchema"
                },
                "example": 2021
            },
            "partial_add_edit_id_catalog": {
                "name": "id_catalog",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "example": "e9597119-8452-4f2b-96d8-f2b1b1d2f158"
            },
            "partial_add_edit_id_priority": {
                "name": "id_priority",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                },
                "example": 1
            },
            "partial_add_edit_title": {
                "name": "title",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "example": "Partial Title"
            },
            "partial_get_all_query": {
                "name": "query",
                "in": "query",
                "description": "Search - Title to search for",
                "schema": {
                    "type": "string"
                },
                "example": ""
            },
            "partial_get_all_column": {
                "name": "column",
                "in": "query",
                "description": "Order - Column to order",
                "schema": {
                    "type": "string",
                    "default": "id_catalog"
                },
                "example": "id_catalog"
            },
            "partial_get_all_order": {
                "name": "order",
                "in": "query",
                "description": "Order - Direction of order column",
                "schema": {
                    "type": "string",
                    "default": "asc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            },
            "partial_get_all_page": {
                "name": "page",
                "in": "query",
                "description": "Pagination - Page to query",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "minimum": 1
                },
                "example": 1
            },
            "partial_get_all_limit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination - Page item limit",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 30,
                    "maximum": 9999,
                    "minimum": 1
                },
                "example": 30
            },
            "sequence_add_edit_title": {
                "name": "title",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "Sample Sequence List"
            },
            "sequence_add_edit_date_from": {
                "name": "date_from",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "date"
                },
                "example": "2020-01-01"
            },
            "sequence_add_edit_date_to": {
                "name": "date_to",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "date"
                },
                "example": "2020-01-01"
            }
        },
        "examples": {
            "AnilistConfigErrorExample": {
                "summary": "Configuration Error",
                "value": {
                    "status": 500,
                    "message": "Anilist scraper configuration not found."
                }
            },
            "AnilistParsingErrorExample": {
                "summary": "Parsing Error",
                "value": {
                    "status": 500,
                    "message": "Issues in parsing AniList response."
                }
            }
        },
        "securitySchemes": {
            "token": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "User"
        },
        {
            "name": "AniList"
        },
        {
            "name": "Bucket Simulation"
        },
        {
            "name": "Catalog"
        },
        {
            "name": "Codec"
        },
        {
            "name": "Dropdowns"
        },
        {
            "name": "Entry"
        },
        {
            "name": "Entry Specific"
        },
        {
            "name": "Group"
        },
        {
            "name": "Import"
        },
        {
            "name": "Logs"
        },
        {
            "name": "Management"
        },
        {
            "name": "Sequence"
        },
        {
            "name": "PC"
        },
        {
            "name": "Fourleaf - Gas"
        },
        {
            "name": "Fourleaf - Electricity"
        },
        {
            "name": "Fourleaf - Bills"
        }
    ]
}